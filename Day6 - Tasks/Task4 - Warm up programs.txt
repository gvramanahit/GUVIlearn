Problem1:
---------
Write a function called “addFive”.
Given a number, “addFive” returns 5 added to that number.

var num = 10;
function addFive(num) { 
 return num + 5;
}
var result = addFive(num);

********************************************************************
Problem2:
---------
Write a function called “getOpposite”.
Given a number, return its opposite

var num = 5;
function getOpposite(num) {
return num * -1;
}
var result = getOpposite(num)


********************************************************************
Problem3:
---------
Fill in your code that takes an number minutes and converts it to seconds.

var min = 5;
function toSeconds(min) {
return min * 60;
}
var secs = toSeconds(min);

********************************************************************
Problem4:
---------
Create a function that takes a string and returns it as an integer.

var mystr = "5";
function toInteger(mystr) {
return parseInt(mystr);
}
var myint = toInteger(mystr)

********************************************************************
Problem5:
---------
Create a function that takes a number as an argument, increments the number by +1 and returns the result.

var myint = 0;
function nextNumber(myint) {
return myint + 1;
}
var myNextint = nextNumber(myint)

********************************************************************
Problem6:
---------
Create a function that takes an array and returns the first element.

var arr = [1, 2, 3];
function getFirstElement(arr) {
return arr[0];
}
var data = getFirstElement(arr)

********************************************************************
Problem7:
---------
Convert Hours into Seconds
Write a function that converts hours into seconds.

var hrs = 2;
function hourToSeconds(hrs) {
return hrs * 60 * 60;
}
var secs = hourToSeconds(hrs)


********************************************************************
Problem8:
---------
Find the Perimeter of a Rectangle
Create a function that takes height and width and finds the perimeter of a rectangle.

function findPerimeter(num1,num2) {
return 2*(num1 + num2);
}
var peri = findPerimeter(6,7);

********************************************************************
Problem9:
---------
Less Than 100?
Given two numbers, return true if the sum of both numbers is less than 100. Otherwise return false.

function lessThan100(num1,num2) {
return num1 + num2 < 100;
}
var res = lessThan100(22,15)

********************************************************************
Problem10:
---------
There is a single operator in JavaScript, capable of providing the remainder of a division operation. 
Two numbers are passed as parameters. The first parameter divided by the second parameter will have a remainder, possibly zero. 
Return that value.

function remainder(num1,num2) {
return 1 % 3;
}
var res = remainder(1,3)

********************************************************************
Problem11:
---------
Old macdonald had a farm:
MacDonald is asking you to tell him how many legs can be counted among all his animals. The farmer breeds three species:
turkey = 2 legs
horse = 4 legs
pigs = 4 legs
The farmer has counted his animals and he gives you a subtotal for each species. 
You have to implement a function that returns the total number of legs of all the animals.

function CountAnimals(tur,horse,pigs) {
return tur * 2 + horse * 4 + pigs * 4;
}
var legs = CountAnimals(2,3,5)

********************************************************************
Problem12:
---------
Check if an Integer is Divisible By Five
Create a function that returns true if an integer is evenly divisible by 5, and false otherwise.

function divisibleByFive(num1) {
return num1 % 5 === 0;
}
var divisible = divisibleByFive(5)

********************************************************************
Problem13:
---------
Write a function called “isEven”.
Given a number, “isEven” returns whether it is even.

function isEven(num){
 return num % 2 === 0;
}
var even = isEven(5)

********************************************************************
Problem14:
---------
Write a function called “areBothOdd”.
Given 2 numbers, “areBothOdd” returns whether or not both of the given numbers are odd.

function areBothOdd(num1, num2){
 return (num1 + num2) % 2 === 0;
}

var rBothOdd = areBothOdd(1,3);

********************************************************************
Problem15:
---------
Write a function called “getFullName”.
Given a first and a last name, “getFullName” returns a single string with the given first and last names separated by a single space.

function getFullName(firstName, lastName){
 return firstName + lastName;
}

********************************************************************
Problem16:
---------
Write a function called “getLengthOfWord”.
Given a word, “getLengthOfWord” returns the length of the given word.

function getLengthOfWord(word1){
 return word1.length;
}

********************************************************************
Problem17:
---------
Write a function called “isSameLength”.
Given two words, “isSameLength” returns whether the given words have the same length.

function isSameLength(word1, word2){
 return word1.length === word2.length;
}

********************************************************************
Problem18:
---------
Create a function to calculate the distance between two points defined by their x, y coordinates

console.log(getDistance(100, 100, 400, 300));
function getDistance(x1, y1, x2, y2)
{
 let interVal = Math.pow((x2-x1),2) + Math.pow((y2-y1),2);
 return Math.sqrt(interVal);
}

********************************************************************
Problem19:
---------
Write a function called “getNthElement”.
Given an array and an integer, “getNthElement” returns the element at the given integer, within the given array. 
If the array has a length of 0, it should return ‘undefined’.

function getNthElement(array,n){
 return array.length > 0 ? array[n] : "undefined";
}

********************************************************************
Problem20:
---------
Write a function called “getLastElement”.
Given an array, “getLastElement” returns the last element of the given array. 
If the given array has a length of 0, it should return ‘-1’.

function getLastElement(array){
 return array.length > 0 ? array[array.length-1] : -1 ;
}

********************************************************************
Problem21:
---------
Write a function called “getProperty”.
Given an object and a key, “getProperty” returns the value of the property at the given key. 
If there is no property at the given key, it should return undefined.

var obj = {
 mykey: “value”
};
function getProperty(obj, key) {
 return obj.key ? obj.key : "undefined ;
}

********************************************************************
Problem22:
---------
Write a function called “addProperty”.
Given an object and a key, “addProperty” adds a new property on the given object with a value of true.

var obj = {
 mykey: “value”
};
function addProperty(obj, key){
 obj[key] = true;
}

********************************************************************
Problem23:
---------
Write a function called “removeProperty”.
Given an object and a key, “removeProperty” removes the given key from the given object.

function removeProperty(obj, key){
 delete obj.key;
}

********************************************************************
Problem24:
---------
Return an array, where the first element is the count of positives numbers and the second element is sum of negative numbers.

var arr = [-5, 10, -3, 12, -9, 5, 90, 0, 1];
var sum = [0,0];

function countPositivesSumNegatives(arr) {
arr.forEach( (element) => { 
element < 0 ? sum[1] += element : sum[0] += element;
})
return sum; 
}

console.log(countPositivesSumNegatives(arr));

********************************************************************
Problem25:
---------
Create a function that receives an array of numbers and returns an array containing only the positive numbers

function getPositives(ar)
{
 let arTemp = ar.filter( (element) => element >= 0);
 return arTemp;
}
var ar = [-5, 10, -3, 12, -9, 5, 90, 0, 1];
var ar2 = getPositives(ar);
console.log(ar2);

********************************************************************
Problem26:
---------
Write a function `powersOfTwo` which will return list of all powers of 2 from 0 to n (where n is an exponent).

function powersOfTwo(n){
let powersArr = [];
for (i=0;i<=n;i++){
powersArr[i] = Math.pow(2,i);  
}
console.log(powersArr);
}

powersOfTwo(3);

********************************************************************
Problem27:
---------
Find the maximum number in an array of numbers

function findMax(ar)
{
 let max = ar.reduce( (a,b) => Math.max(a,b));
 return max;
}
var ar = [-5, 10, -3, 12, -9, 5, 90, 0, 1];
var max = findMax(ar);
console.log('Max: ' max);

********************************************************************
Problem28:
---------
Print the first 100 prime numbers

printPrimes(100);
// Function prints the first nPrimes numbers
function printPrimes(nPrimes)
{
 var n = 2;
 var i = 3;

 console.log(1, ' → ', 2);
 
 while(n <= nPrimes)
 {
 if (isPrime(i))
 {
 console.log(n, ' → ', i);
 n++;
 }
 
 i += 2;
 }
}
// Returns true if a number is prime
function isPrime(n)
{
 for(let i=2;i<=Math.sqrt(n);i++)
{
if(n%i === 0) {return false;}
}
return true;
}

********************************************************************
Problem29:
---------
Reverse a string

var s = reverseString('JavaScript');
console.log(s);
function reverseString(s)
{
   return s.split("").reverse().join("");
}

********************************************************************
Problem30:
---------
Create a function that will return in an array the first “nPrimes” prime numbers greater than a particular number “startAt”

console.log(printPrimes(3,1));
// Function prints the first nPrimes numbers
function printPrimes(nPrimes,startAt)
{
 var n = 1;
 var i = startAt;
 var primeArr = [];

 if (i === 0 || i === 1 || i === 2) { 
     primeArr.push(2); 
     n++;
     i = 3;
 }

 while(n <= nPrimes)
 {
 if (isPrime(i))
 {
 primeArr.push(i);
 n++;
 }
 
 i++;
 }
return primeArr;
}
// Returns true if a number is prime
function isPrime(n)
{
 for(let i=2;i<=Math.sqrt(n);i++)
{
if(n%i === 0) {return false;}
}
return true;
}

********************************************************************
Problem31:
---------
Calculate the sum of numbers received in a comma delimited string

console.log(sumCSV('1.5, 2.3, 3.1, 4, 5.5, 6, 7, 8, 9, 10.9'));
function sumCSV(s)
{
  let arr = s.split(", ");
  return arr.map(Number).reduce( ((sum, item) => sum += item), 0);
}

********************************************************************
Problem32:
---------
Frames Per Second
Create a function that returns the number of frames shown in a given number of minutes for a certain FPS.

function frames(num1,num2) {
return 60 * num1 * num2;
}
var fps = frames(1,2);

********************************************************************
Problem33:
---------

Create a function that will merge two arrays and return the result as a new array

var ar1 = [1, 2, 3];
var ar2 = [4, 5, 6];
var ar = mergeArrays(ar1, ar2);
console.log(ar);
function mergeArrays(ar1, ar2)
{
 var result = [];
 result = ar1.concat(ar2);
 return result;
}





























